[{"path":"https://angelayustat.github.io/SCoRES/articles/Methods.html","id":"definition-of-inverse-set-and-introduction-of-the-estimating-method","dir":"Articles","previous_headings":"","what":"Definition of Inverse Set and Introduction of the Estimating Method","title":"Methods","text":"identification domain sets whose outcomes belong predefined subsets can address fundamental risk assessment challenges climatology medicine. motivating example involves estimating geographical regions average difference summer winter temperatures exceed certain benchmark, help policymakers focus specific areas higher risk effects climate change. Mathematically, target region correspond inverse image U⊂ℝU \\subset  \\mathbb{R} unknown function μ:𝒮→ℝ\\mu: \\mathcal{S} \\\\mathbb{R}, can defined μ−1(U)={s∈S:μ(s)∈U} \\mu^{-1}(U) = \\{s \\S: \\mu(s) \\U\\}  , UU pre-specified subset real line ℝ\\mathbb{R} (e.g., [c,∞)[c, \\infty)). point estimator inverse set can constructed μ̂n−1(U)\\hat{\\mu}_n^{-1}(U), μ̂n\\hat{\\mu}_n empirical estimator μ\\mu based nn observations. quantify spatial uncertainty estimation, Sommerfeld et al. (2018) introduced Coverage Probability Excursion (CoPE) sets, defined : CSin(U)⊆μ−1(U)⊆CSout(U) \\text{CS}_{\\text{}}(U) \\subseteq \\mu^{-1}(U) \\subseteq \\text{CS}_{\\text{}}(U)  satisfy: ℙ(CSin(U)⊆μ−1(U)⊆CSout(U))≥1−α \\mathbb{P}\\left(\\text{CS}_{\\text{}}(U) \\subseteq \\mu^{-1}(U) \\subseteq \\text{CS}_{\\text{}}(U)\\right) \\geq 1 - \\alpha  pre-specified confidence level 1−α1-\\alpha (e.g., α=0.05\\alpha = 0.05). Existing approaches require restrictive assumptions, including domain density SS RR, continuity μ̂n\\hat{\\mu}_n μ\\mu near thresholds, large-sample guarantees, limit applicability. Besides, estimation coverage depend setting fixed threshold level, difficult determine. Ren et al. (2023) proposed framework generalizes estimation inverse sets dense non-dense domains protection inflated Type error, constructs multiple upper, lower interval confidence sets μ−1(U)\\mu^{-1}(U) arbitrary chosen thresholds. coverage probability achieved non-asymptotically simultaneously inverting simultaneous confidence intervals. instance, suppose interested inverse set μ−1([c,∞))\\mu^{-1}([c,\\infty)) single value cc, inverse confidence sets (CSs) constructed inverting simultaneous confidence intervals (SCIs). Given SCI bounds B̂l(𝐬)\\hat{B}_{l}(\\boldsymbol{s}) B̂u(𝐬)\\hat{B}_{u}(\\boldsymbol{s}) satisfying: ℙ(∀𝐬∈𝒮:B̂l(𝐬)≤μ(𝐬)≤B̂u(𝐬))=1−α \\mathbb{P}\\left(\\forall\\boldsymbol{s}\\\\mathcal{S}: \\hat{B}_{l}(\\boldsymbol{s}) \\leq \\mu(\\boldsymbol{s}) \\leq \\hat{B}_{u}(\\boldsymbol{s})\\right) = 1-\\alpha inner outer CSs inverse upper excursion set μ−1[c,∞)\\mu^{-1}[c, \\infty) defined :CSin[c,∞):=B̂ℓ−1[c,∞) \\text{CS}_{\\text{}}[c, \\infty) := \\hat{B}_\\ell^{-1}[c, \\infty) CSout[c,∞):=B̂u−1[c,∞) \\text{CS}_{\\text{}}[c,\\infty) := \\hat{B}_u^{-1}[c, \\infty) outer inner confidence sets (CSs) inverse lower excursion set μ−1(−∞,c]\\mu^{-1}\\left(-\\infty, c\\right] defined : CSin(−∞,c]:=B̂u−1(−∞,c]=(B̂u−1[c,+∞))∁ \\text{CS}_{\\text{}}\\left(-\\infty, c\\right] := \\hat{B}_u^{-1}\\left(-\\infty, c\\right] = \\left( \\hat{B}_u^{-1}\\left[c, +\\infty\\right) \\right)^{\\complement} CSout(−∞,c]:=B̂ℓ−1(−∞,c]=(B̂ℓ−1[c,+∞))∁ \\text{CS}_{\\text{}}\\left(-\\infty, c\\right] := \\hat{B}_\\ell^{-1}\\left(-\\infty, c\\right] = \\left( \\hat{B}_\\ell^{-1}\\left[c, +\\infty\\right) \\right)^{\\complement} inner outer CSs inverse interval set μ−1[,b]\\mu^{-1}[, b] defined : CSin[,b]:=B̂ℓ−1[,∞)∩B̂u−1(−∞,b] \\text{CS}_{\\text{}}[, b] := \\hat{B}_\\ell^{-1}[, \\infty) \\cap \\hat{B}_u^{-1}(-\\infty, b] CSout[,b]:=B̂u−1[,∞)∩B̂ℓ−1(−∞,b] \\text{CS}_{\\text{}}[, b] := \\hat{B}_u^{-1}[, \\infty) \\cap \\hat{B}_\\ell^{-1}(-\\infty, b]  ## Linear Function--Scalar Regression (FoSR) simple example function--scalar regression model Yi(t)=β0(t)+β1(t)Xi1+bi(t)+ϵi(t), Y_i(t) = \\beta_0(t) + \\beta_1(t) X_{i1} + b_i(t) + \\epsilon_i(t), : Yi(t)Y_i(t) functional outcome Xi1X_{i1} scalar covariate βj(t)\\beta_j(t) coefficient function bi(t)b_i(t) subject-specific functional random effect. captures correlation within subjects time captured mean. term always included FoSR models, ’s generally good idea gives better inference ϵi(t)\\epsilon_i(t) normally distributed iid errors , bases used β1(t)\\beta_1(t) β2(t)\\beta_2(t).","code":""},{"path":"https://angelayustat.github.io/SCoRES/articles/Methods.html","id":"accounting-for-error-correlation","dir":"Articles","previous_headings":"Definition of Inverse Set and Introduction of the Estimating Method","what":"Accounting for Error Correlation","title":"Methods","text":"fitted GAM model didn’t take correlation residuals account. , combined random effects FPCA GAM model resolve .","code":""},{"path":"https://angelayustat.github.io/SCoRES/articles/Methods.html","id":"modeling-residuals-with-fpca-and-gam","dir":"Articles","previous_headings":"Definition of Inverse Set and Introduction of the Estimating Method > Accounting for Error Correlation","what":"Modeling residuals with FPCA and gam","title":"Methods","text":"First, fit mean model: Yi(t)=β0(t)+β1(t)Xi1+ei(t), Y_i(t) = \\beta_0(t) + \\beta_1(t) X_{i1} + e_i(t),","code":""},{"path":"https://angelayustat.github.io/SCoRES/articles/Methods.html","id":"estimate-the-fpca-for-gamm-fpca-model","dir":"Articles","previous_headings":"Definition of Inverse Set and Introduction of the Estimating Method > Accounting for Error Correlation","what":"Estimate the FPCA for GAMM FPCA model","title":"Methods","text":"obtaining residuals mean model, FPCA models residuals using equation ei(s)=bi(s)+ϵi(s)e_i(s) = b_i(s) + \\epsilon_i(s), bi(s)b_i(s) follows mean zero Gaussian Process (GP) covariance function Σ\\Sigma, ϵi(s)\\epsilon_i(s) independent N(0,σe2)N(0, \\sigma_e^2) random errors. Assuming ϕk(⋅)\\phi_k(\\cdot) eigenfunctions covariance operator KXK_X bi(⋅)b_i(\\cdot), one can express: bi(t)=∑k=1∞ξikϕk(t) b_i(t) = \\sum_{k=1}^{\\infty} \\xi_{ik} \\phi_k(t) GAMM-FPCA model : Yi(t)=β0(t)+β1(t)Xi1+∑k=1Kξikϕk(t)+ϵi(t), Y_i(t) = \\beta_0(t) + \\beta_1(t) X_{i1} + \\sum_{k=1}^{K} \\xi_{ik} \\phi_k(t) + \\epsilon_i(t),","code":""},{"path":[]},{"path":"https://angelayustat.github.io/SCoRES/articles/Methods.html","id":"correlation-and-multiplicity-adjusted-cma-confidence-bands-based-on-parameter-simulations","dir":"Articles","previous_headings":"Construction of Simultaneous Confidence Bands for Functional Regression Model","what":"Correlation and Multiplicity Adjusted (CMA) Confidence Bands Based on Parameter Simulations","title":"Methods","text":"Simulate model parameters 𝛃1,…,𝛃B∼..d.𝒩(𝛃̂,V̂𝛃)\\boldsymbol{\\beta}_1, \\ldots, \\boldsymbol{\\beta}_B \\overset{\\text{..d.}}{\\sim} \\mathcal{N}(\\hat{\\boldsymbol{\\beta}}, \\hat{V}_{\\boldsymbol{\\beta}}) , (𝛃̂,V̂𝛃)(\\hat{\\boldsymbol{\\beta}}, \\hat{V}_{\\boldsymbol{\\beta}}) estimated via fitted FoSR model. b=1,…,Bb = 1, \\ldots, B, compute 𝐗b=𝐁(βb−β̂)𝐃f \\mathbf{X}_b = \\frac{\\mathbf{B}({\\beta}_b - \\hat{{\\beta}})}{\\mathbf{D}_f}  , division element-wise 𝐁\\mathbf{B} maps parameters functional effects. Let db=max(|𝐗b|),b=1,…,B d_b = \\max(|\\mathbf{X}_b|), \\quad b = 1, \\ldots, B  , absolute value taken element-wise. Estimate q(Cf,1−α)q(C_f, 1 - \\alpha) 100⋅(1−α)100 \\cdot (1 - \\alpha) percentile {d1,…,dB}\\{d_1, \\ldots, d_B\\}.","code":""},{"path":"https://angelayustat.github.io/SCoRES/articles/Methods.html","id":"multiplier-t-bootstrap-procedure-for-constructing-confidence-bands","dir":"Articles","previous_headings":"Construction of Simultaneous Confidence Bands for Functional Regression Model","what":"Multiplier-t Bootstrap Procedure for Constructing Confidence Bands","title":"Methods","text":"Compute residuals R1N,…,RNNR_1^N, \\ldots, R_N^N, RnN=NN−1(Yn−μ̂N)R_n^N = \\sqrt{\\frac{N}{N - 1}} \\left( Y_n - \\hat{\\mu}_N \\right), multipliers g1,…,gN∼..d.gg_1, \\ldots, g_N \\overset{\\text{..d.}}{\\sim} g 𝔼[g]=0\\mathbb{E}[g] = 0 var[g]=1\\mathrm{var}[g] = 1. Estimate ϵ̂N*(s)\\hat{\\epsilon}_N^*(s) g1Y1(s),…,gNYN(s)g_1 Y_1(s), \\ldots, g_N Y_N(s). Compute T*(s)=1N∑n=1NgnRnN(s)ϵ̂N*(s) T^*(s) = \\frac{1}{\\sqrt{N}} \\sum_{n=1}^N g_n \\frac{R_n^N(s)}{\\hat{\\epsilon}_N^*(s)} Repeat steps 1 3 many times. Take (1−α)⋅100%(1 - \\alpha) \\cdot 100\\% quantile ℒ*\\mathcal{L}^* estimate qα,Nq_{\\alpha, N}. details algorithm, please refer Telschow et al. (2019) SCoRES provides two options estimating μ̂N\\hat{\\mu}_N RnNR_n^N. est_mean = TRUE, μ̂N\\hat{\\mu}_N estimated though using fitted regression object. est_mean = FALSE, sample mean calculated. Default FALSE. sample mean μ̂N(s)=1N∑=1NYi(s) \\hat{\\mu}_N(s) = \\frac{1}{N} \\sum_{=1}^N {Y}_i(s)  , Yi(s){Y}_i(s) observed functional response. fitted mean value functional regression model (e.g., using mgcv::bam). multiplier bootstrap procedure, SCoRES supports three types multiplier distributions, specified weights: \"rademacher\": gi∈{−1,+1}g_i \\\\{-1, +1\\} equal probability \"gaussian\": gi∼𝒩(0,1)g_i \\sim \\mathcal{N}(0, 1) \"mammen\": two-point distribution mean zero variance one (see Mammen, 1993) Default rademacher. Two options available estimating standard error ϵ̂N*(sj)\\hat{\\epsilon}_N^*(s_j), specified method_SD: “regular” (empirical standard error based residuals): ϵ̂N*(sj)=1n∑=1n(Yi(sj)−β̂(sj))2/(n−1) \\hat{\\epsilon}_N^*(s_j) = \\sqrt{ \\frac{1}{n} \\sum_{=1}^n \\left( {Y}_i(s_j) - \\hat{\\beta}(s_j) \\right)^2 / (n-1) } . “t” (bootstrap second moment-based estimator): ϵ̂N*(sj)=NN−1|𝔼b[Yb(sj)2]−(𝔼b[Yb(sj)])2| \\hat{\\epsilon}_N^*(s_j) = \\sqrt{ \\frac{N}{N-1} \\left| \\mathbb{E}_b\\left[ {Y}^{b}(s_j)^2 \\right] - \\left( \\mathbb{E}_b\\left[ {Y}^{b}(s_j) \\right] \\right)^2 \\right| }  , expectations taken bootstrap replicates Yb(sj){Y}^{b}(s_j) perturbed sample bootstrap iteration bb. absolute value ensures numerical stability subtracting large, nearly equal quantities. Default t.","code":""},{"path":"https://angelayustat.github.io/SCoRES/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Angela Yu. Author, maintainer. Armin Schwartzman. Author. Julia Wrobel. Author. Junting Ren. Contributor.","code":""},{"path":"https://angelayustat.github.io/SCoRES/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Yu , Schwartzman , Wrobel J (2025). SCoRES: Simultaneous Confidence Region Excursion Sets. R package version 0.1.0, https://angelayustat.github.io/SCoRES.","code":"@Manual{,   title = {SCoRES: Simultaneous Confidence Region Excursion Sets},   author = {Angela Yu and Armin Schwartzman and Julia Wrobel},   year = {2025},   note = {R package version 0.1.0},   url = {https://angelayustat.github.io/SCoRES}, }"},{"path":[]},{"path":"https://angelayustat.github.io/SCoRES/index.html","id":"what-it-does","dir":"","previous_headings":"","what":"What it does","title":"Simultaneous Confidence Region Excursion Sets","text":"identification domain sets whose outcomes belong predefined subsets can address fundamental risk assessment challenges climatology medicine. motivating example involves estimating geographical regions average difference summer winter temperatures exceed certain benchmark, help policymakers focus specific areas higher risk effects climate change. Therefore, statistical framework needed estimating set domain function whose image equals predefined subset, can defined μ−1(U)={s∈S:μ(s)∈U}\\mu^{-1}(U) = \\{s \\S: \\mu(s) \\U\\}, UU pre-specified subset real line ℝ\\mathbb{R} (e.g., [c,∞)[c, \\infty)). Proposed Sommerfeld et al. (2018), Coverage Probability Excursion (CoPE) sets, defined : CSin(U)⊆μ−1(U)⊆CSout(U) \\text{CS}_{\\text{}}(U) \\subseteq \\mu^{-1}(U) \\subseteq \\text{CS}_{\\text{}}(U)  used assess spatial uncertainty inverse set estimation. Ren et al. (2023) generalized estimation dense non-dense domains, developed fast reliable construction method confidence sets inverse sets arbitrary chosen thresholds cc simultaneously. Based Ren’s approach, package provides useful statistical tools estimation inverse set corresponding simultaneous outer inner confidence sets (CSs). Acceptable forms input includes 1D 2D data linear regression, logistic regression, functional regression spatial generalized least square regression. Useful functions also provided constructing simultaneous confidence bands (SCB) models. details can found .","code":""},{"path":"https://angelayustat.github.io/SCoRES/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Simultaneous Confidence Region Excursion Sets","text":"install CRAN, please use: install latest version directly Github, please use:","code":"# install.packages(\"SCoRES\") install.packages(\"devtools\") devtools::install_github(\"AngelaYuStat/SCoRES\")"},{"path":"https://angelayustat.github.io/SCoRES/index.html","id":"how-to-use-it","dir":"","previous_headings":"","what":"How to use it","title":"Simultaneous Confidence Region Excursion Sets","text":"example use ccds functional data construct inverse confidence sets (CS) simultaneous confidence bands (SCB) using Function--Scalar Regression (FoSR). pupil dataset contains repeated measures percent change time multiple subjects two user categories (use: 1 use: 0). contains user non-user groups, multiple time points, several covariates, including age, gender, BMI, alcohol consumption. calculating SCBs, first process pupil data fitting mean GAM model, extracting residuals performing FPCA using SCoRES::prepare_ccds_fpca(), function return enhanced dataset includes FPCA-derived basis scores (Phi1, Phi2, Phi3, Phi4) Function--Scalar Regression (FoSR) analysis. Following FPCA-based data augmentation, fit FoSR model using mgcv::bam(), allows efficient estimation Generalized Additive Mixed Models (GAMMs). model formula designed capture population-level smooth trends subject-specific functional variation. function--scalar regression model Yi(t)=β0(t)+β1(t)Xi1+bi(t)+ϵi(t), Y_i(t) = \\beta_0(t) + \\beta_1(t) X_{i1} + b_i(t) + \\epsilon_i(t), obtaining FoSR object fosr_mod, simultaneous confidence bands (SCB) can constructed though SCoRES::SCB_functional_outcome using pre-specified methods. SCoRES package provides two options calculating simultaneous confidence bands (SCB). Use method specify. Use groups specify names grouping variables analyze. input data numerical binary 0/1 values scalar group variables. , analyze user group specifying groups = \"use\". Use fitted specify object SCB estimation. fitted = TRUE, SCoRES::SCB_functional_outcome construct SCB fitted mean outcome function. fitted = FALSE, SCoRES::SCB_functional_outcome construct SCB fitted parameter function. Use est_mean specify point estimate constructing SCB. est_mean = TRUE, SCoRES::SCB_functional_outcome estimate simultaneous confidence bands fitted mean outcome function. est_mean = FALSE, SCoRES::SCB_functional_outcome estimate simultaneous confidence bands sample mean. , estimated SCBs using options seperately mean outcome Y(t) user’s group: f̂(t)=E[Y(t)|X1=1]=β0(t)+β1(t), \\hat{f}(t) = E[Y(t) | X_{1} = 1]= \\beta_0(t) + \\beta_1(t),  : Yi(t)Y_i(t) functional outcome (percent_change) Xi1X_{i1} scalar covariate (use) code visualizes inverse confidence sets (CSs) derived SCB results using SCoRES::plot_cs() function. results object first converted tibble easier manipulation. levels = c(-18, -20, -22, -24) argument specifies set thresholds, SCoRES::plot_cs() function estimates multiple inverse upper excursion sets corresponding thresholds, plot estimated inverse set, inner confidence set, outer confidence set.  plot demonstrate use SCB find regions s estimated mean greater equal four levels -18, -20, -22 -24 ccds data. gray shaded area 95% SCB, solid black line estimated mean. red horizontal line shows inner confidence sets (lower SCB greater corresponding level) contained estimated inverse set represented union yellow red horizontal line (estimated mean greater corresponding levels); outer confidence sets union blue, yellow red line (upper SCB greater corresponding levels) contain estimated inverse sets inner confidence sets.","code":"library(SCoRES) library(mgcv) data(pupil) pupil_fpca <- SCoRES::prepare_pupil_fpca(pupil) fosr_mod <- mgcv::bam(percent_change ~ s(seconds, k=30, bs=\"cr\") +             s(seconds, by = use, k=30, bs = \"cr\") +             s(id, by = Phi1, bs=\"re\") +             s(id, by = Phi2, bs=\"re\") +             s(id, by = Phi3, bs=\"re\") +             s(id, by = Phi4, bs=\"re\"),             method = \"fREML\", data = pupil_fpca, discrete = TRUE) # CMA approach results_pupil_cma <- SCoRES::SCB_functional_outcome(                                           data_df = pupil,                                           object = fosr_mod,                                            method = \"cma\",                                           fitted = TRUE,                                           est_mean = TRUE,                                            alpha = 0.05,                                            outcome = \"percent_change\",                                            time = \"seconds\",                                            group_name = \"use\",                                            group_value = 1,                                            subject = \"id\") results_pupil_cma <- tibble::as_tibble(results_pupil_cma) plot_cs(results_pupil_cma,         levels = c(-18, -20, -22, -24),          x = results_pupil_cma$time,          mu_hat = results_pupil_cma$yhat,          xlab = \"Seconds\",          ylab = \"Percent_Outcome\",          level_label = T,          min.size = 40,          palette = \"Spectral\",          color_level_label = \"black\")"},{"path":"https://angelayustat.github.io/SCoRES/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 SCoRES Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/climate_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Historical and Future Summer Temperature Data in North America — climate_data","title":"Historical and Future Summer Temperature Data in North America — climate_data","text":"spatial dataset containing historical (1971-1999) future (2041-2069) mean summer (June–August) surface temperatures North America, used evaluating increase mean summer temperature 20th 21st centuries North America, constructing simultaneous confidence bands via generalized least squares (GLS) modeling.","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/climate_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Historical and Future Summer Temperature Data in North America — climate_data","text":"","code":"data(climate_data)"},{"path":"https://angelayustat.github.io/SCoRES/reference/climate_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Historical and Future Summer Temperature Data in North America — climate_data","text":"list following components: Z list containing spatial data three components: x (longitude), y (latitude), z, 3D array observations dimensions [lon, lat, n]. first na slices z come mean summer temperature (June-August) North America recorded 1971 1999, last nb slices contain mean summer temperature 2041 2069. mask logical numeric matrix dimensions length(lon) × length(lat). Values set 1 land NA elsewhere based elevation matrix orog > 0. X numeric design matrix na + nb rows 4 columns, constructed generalized least squares (GLS) regression. rows correspond spatial replicates na current years nb future years. columns : X1: Group indicator (0 current years (1971-1999), 1 future years (2041-2069)) X2: Intercept X3: Centered time variable ta current years (1971-1999) (0 future years (2041-2069)) X4: Centered time variable tb future years (2041-2069) (0 current years (1971-1999)) correlation character string set \"corAR1\", indicating autoregressive correlation structure order 1 (AR(1)) used GLS fitting.","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/climate_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Historical and Future Summer Temperature Data in North America — climate_data","text":"Processed data-raw/climate_data.R using readr package.","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/climate_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Historical and Future Summer Temperature Data in North America — climate_data","text":"data arranged regular longitude–latitude grid, spatial masking land-analysis. AR(1) correlation structure assumed statistical modeling.","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/climate_data.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Historical and Future Summer Temperature Data in North America — climate_data","text":"Sommerfeld, M., Sain, S., & Schwartzman, . (2018). Confidence regions spatial excursion sets repeated random field observations, application climate. Journal American Statistical Association, 113(523), 1327–1340. doi:10.1080/01621459.2017.1356318","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/cma.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct CMA Confidence Intervals via Parametric Method — cma","title":"Construct CMA Confidence Intervals via Parametric Method — cma","text":"function computes Correlation Multiplicity Adjusted (CMA) confidence bands specified group functional outcome regression model using parameter simulations approach Gaussian multiplier bootstrap.","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/cma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct CMA Confidence Intervals via Parametric Method — cma","text":"","code":"cma(   data_df,   object,   fitted = TRUE,   alpha = 0.05,   time,   range = NULL,   group_name = NULL,   group_value = NULL,   subject = NULL,   nboot = NULL )"},{"path":"https://angelayustat.github.io/SCoRES/reference/cma.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct CMA Confidence Intervals via Parametric Method — cma","text":"data_df functional data frame. input data must column names, contain functional outcome, time subject object fitted Function--Scalar Regression (FoSR) object (e.g., mgcv::bam()/mgcv::gam()). fitted Logical. Whether estimate simultaneous confidence bands fitted mean function fitted parameter function TRUE - Estimate simultaneous confidence bands fitted mean outcome function. FALSE - estimate simultaneous confidence bands fitted parameter function. Default TRUE. alpha Significance level SCB. Default 0.05. time character string specifying name time variable used model. range numeric vector specifying range grid time points interested. Defaut whole time points fitted model. group_name character vector specifies names grouping scalar variables analyze. Default NULL, representing reference group. group_value numeric vector specifies corresponding values variables listed group_name. entry group_value match respective variable group_name. Character/factor allowed. Default NULL, representing reference group. subject optional character string specifying name subject-level random effect variable, included model fitting. nboot integer specifying number bootstrap samples used construct confidence bands. Default 10,000.","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/cma.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct CMA Confidence Intervals via Parametric Method — cma","text":"list containing: yhat Estimated mean function group interest. time time points used. se_hat Standard errors estimated means. scb_low Lower bound simultaneous confidence band. scb_up Upper bound simultaneous confidence band. type character description output type.","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/cma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct CMA Confidence Intervals via Parametric Method — cma","text":"","code":"# example using pupil data library(mgcv) #> Warning: package 'mgcv' was built under R version 4.4.3 #> Loading required package: nlme #> Warning: package 'nlme' was built under R version 4.4.3 #> This is mgcv 1.9-3. For overview type 'help(\"mgcv-package\")'. data(pupil) pupil_fpca <- prepare_pupil_fpca(pupil)  fosr_mod <- mgcv::bam(percent_change ~ s(seconds, k=30, bs=\"cr\") +   s(seconds, by = use, k=30, bs = \"cr\") +   s(id, by = Phi1, bs=\"re\") +   s(id, by = Phi2, bs=\"re\")+   s(id, by = Phi3, bs=\"re\") +   s(id, by = Phi4, bs=\"re\"),   method = \"fREML\", data = pupil_fpca, discrete = TRUE)  results <- cma(pupil_fpca, fosr_mod, fitted = TRUE, time = \"seconds\", group_name = \"use\", group_value = 1, subject = \"id\")  results <- cma(pupil_fpca, fosr_mod, fitted = FALSE, time = \"seconds\", group_name = \"use\", group_value = 1, subject = \"id\")"},{"path":"https://angelayustat.github.io/SCoRES/reference/expit.html","id":null,"dir":"Reference","previous_headings":"","what":"Expit (Inverse Logit) Function — expit","title":"Expit (Inverse Logit) Function — expit","text":"Computes inverse logit transformation.","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/expit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expit (Inverse Logit) Function — expit","text":"","code":"expit(x)"},{"path":"https://angelayustat.github.io/SCoRES/reference/expit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expit (Inverse Logit) Function — expit","text":"x numeric input.","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/expit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expit (Inverse Logit) Function — expit","text":"Value 0 1.","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/expit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expit (Inverse Logit) Function — expit","text":"","code":"expit(0)         # returns 0.5 #> [1] 0.5 expit(c(-2, 0, 2)) #> [1] 0.1192029 0.5000000 0.8807971"},{"path":"https://angelayustat.github.io/SCoRES/reference/incl_f.html","id":null,"dir":"Reference","previous_headings":"","what":"Test inclusion relationship between two logical vectors — incl_f","title":"Test inclusion relationship between two logical vectors — incl_f","text":"function tests whether TRUE positions vector also TRUE vector B, equivalent testing whether element-wise included B.","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/incl_f.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test inclusion relationship between two logical vectors — incl_f","text":"","code":"incl_f(A, B)"},{"path":"https://angelayustat.github.io/SCoRES/reference/incl_f.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test inclusion relationship between two logical vectors — incl_f","text":"logical vector. B logical vector length .","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/incl_f.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test inclusion relationship between two logical vectors — incl_f","text":"logical value: TRUE TRUE values also TRUE B; otherwise FALSE.","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/incl_f.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test inclusion relationship between two logical vectors — incl_f","text":"","code":"# Used internally by scb_to_cs"},{"path":"https://angelayustat.github.io/SCoRES/reference/MB_.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiplier Bootstrap for Simultaneous Confidence Band Threshold — MB_","title":"Multiplier Bootstrap for Simultaneous Confidence Band Threshold — MB_","text":"Internal function used compute threshold value constructing simultaneous confidence bands via multiplier bootstrap.","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/MB_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiplier Bootstrap for Simultaneous Confidence Band Threshold — MB_","text":"","code":"MB_(x, y, R, N = 1000)"},{"path":"https://angelayustat.github.io/SCoRES/reference/MB_.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiplier Bootstrap for Simultaneous Confidence Band Threshold — MB_","text":"x numeric vector x-coordinates. y numeric vector y-coordinates. R 3D array standardized residuals dimensions [length(x), length(y), n], n sample size. N integer specifying number bootstrap samples. Default 1000.","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/MB_.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multiplier Bootstrap for Simultaneous Confidence Band Threshold — MB_","text":"numeric vector length N, containing maximum standardized deviation across spatial locations bootstrap sample. can used compute (1 - alpha) quantile SCB threshold.","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/MB_.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multiplier Bootstrap for Simultaneous Confidence Band Threshold — MB_","text":"","code":"# Used internally by SCB_gls_climate"},{"path":"https://angelayustat.github.io/SCoRES/reference/mean_response_predict.html","id":null,"dir":"Reference","previous_headings":"","what":"Functional Outcome Regression Prediction with Group-Specific Inference — mean_response_predict","title":"Functional Outcome Regression Prediction with Group-Specific Inference — mean_response_predict","text":"function internal function constructing SCBs functional data.","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/mean_response_predict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Functional Outcome Regression Prediction with Group-Specific Inference — mean_response_predict","text":"","code":"mean_response_predict(   data_df,   object,   fitted = TRUE,   time,   range = NULL,   group_name,   group_value,   subject = NULL )"},{"path":"https://angelayustat.github.io/SCoRES/reference/mean_response_predict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Functional Outcome Regression Prediction with Group-Specific Inference — mean_response_predict","text":"data_df functional data frame. input data must column names, contain functional outcome, time subject object fitted Function--Scalar Regression (FoSR) model object (e.g., mgcv::bam()/mgcv::gam()). fitted Logical. Whether estimate simultaneous confidence bands fitted mean function fitted parameter function TRUE - Estimate simultaneous confidence bands fitted mean outcome function. FALSE - estimate simultaneous confidence bands fitted parameter function. Default TRUE. time character string specifying name time variable used model. range numeric vector specifying range grid time points interested. Defaut whole time points fitted model. group_name character vector specifies names grouping scalar variables analyze. Default NULL, representing reference group. group_value numeric vector specifies corresponding values variables listed group_name. entry group_value match respective variable group_name. Character/factor allowed. Default NULL, representing reference group. subject optional character string specifying name subject-level random effect variable, included model fitting.","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/mean_response_predict.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Functional Outcome Regression Prediction with Group-Specific Inference — mean_response_predict","text":"list containing following elements: s_pred Numeric vector sorted unique time points used prediction pred_df Data frame prediction results, containing: mean: Predicted mean values se: Standard errors lpmat Linear predictor matrix (design matrix) used confidence interval calculations mod_coef Vector model coefficients selected group mod_cov Variance-covariance matrix corresponding selected group coefficients","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/mean_response_predict.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Functional Outcome Regression Prediction with Group-Specific Inference — mean_response_predict","text":"","code":"library(mgcv) data(pupil) pupil_fpca <- prepare_pupil_fpca(pupil)  fosr_mod <- mgcv::bam(percent_change ~ s(seconds, k=30, bs=\"cr\") +   s(seconds, by = use, k=30, bs = \"cr\") +   s(id, by = Phi1, bs=\"re\") +   s(id, by = Phi2, bs=\"re\")+   s(id, by = Phi3, bs=\"re\") +   s(id, by = Phi4, bs=\"re\"),   method = \"fREML\", data = pupil_fpca, discrete = TRUE)  results <- mean_response_predict(pupil_fpca, fosr_mod, fitted = TRUE, time = \"seconds\", group_name = \"use\", group_value = 1, subject = \"id\")  results <- mean_response_predict(pupil_fpca, fosr_mod, fitted = FALSE, time = \"seconds\", group_name = \"use\", group_value = 1, subject = \"id\")"},{"path":"https://angelayustat.github.io/SCoRES/reference/MultiplierBootstrap.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiplier Bootstrap — MultiplierBootstrap","title":"Multiplier Bootstrap — MultiplierBootstrap","text":"Multiplier Bootstrap","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/MultiplierBootstrap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiplier Bootstrap — MultiplierBootstrap","text":"","code":"MultiplierBootstrap(   R,   Q = NULL,   alpha = 0.05,   Mboots = 5000,   method = \"t\",   weights = \"rademacher\" )"},{"path":"https://angelayustat.github.io/SCoRES/reference/MultiplierBootstrap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiplier Bootstrap — MultiplierBootstrap","text":"R Array shape (..., N), N number repetitions Q Optional second sample array two-sample SCB alpha Significance level (default 0.05) Mboots Number bootstrap replications (default 5000) method Method SD estimation: \"t\" \"regular\" weights Multiplier type: \"rademacher\", \"gaussian\", \"mammen\"","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/MultiplierBootstrap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multiplier Bootstrap — MultiplierBootstrap","text":"list fields: z (distribution), q (threshold), samples","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/MultiplierBootstrap.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Multiplier Bootstrap — MultiplierBootstrap","text":"Telschow, F. J. E., & Schwartzman, . (2022). Simultaneous confidence bands functional data using Gaussian Kinematic formula. Journal Statistical Planning Inference, 216, 70–94. doi:10.1016/j.jspi.2021.05.008","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/MultiplierBootstrap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multiplier Bootstrap — MultiplierBootstrap","text":"","code":"# Used internally by SCB_dense and functional_outcome_scb"},{"path":"https://angelayustat.github.io/SCoRES/reference/plot_cs.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Inversion of Simultaneous Confidence Intervals (SCIs) into Inner and Outer Confidence Sets (CSs) — plot_cs","title":"Plot Inversion of Simultaneous Confidence Intervals (SCIs) into Inner and Outer Confidence Sets (CSs) — plot_cs","text":"Visualizes 1D 2D inversion simultaneous confidence sets using contour band plots. Supports plotting CSs multiple levels labeling contours.","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/plot_cs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Inversion of Simultaneous Confidence Intervals (SCIs) into Inner and Outer Confidence Sets (CSs) — plot_cs","text":"","code":"plot_cs(   SCB,   levels,   type = \"upper\",   x,   y = NULL,   mu_hat = NULL,   mu_true = NULL,   together = TRUE,   xlab = \"X1\",   ylab = \"X2\",   level_label = TRUE,   min.size = 5,   palette = \"gray\",   color_level_label = \"black\" )"},{"path":"https://angelayustat.github.io/SCoRES/reference/plot_cs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Inversion of Simultaneous Confidence Intervals (SCIs) into Inner and Outer Confidence Sets (CSs) — plot_cs","text":"SCB numeric list returned regression_outcome_scb(), functional_outcome_scb() custom list two arrays dimension: scb_up scb_low, representing upper lower confidence bounds respectively. SCB$scb_up SCB$scb_low numeric vectors (1D) matrices (2D) containing upper simultaneous confidence interval. Dimensions SCB$scb_up SCB$scb_low must match. levels numeric vector list scalers different levels matrix containing interval sets construct confidence sets. type = \"upper\" \"lower\", levels vector. type = \"interval\", levels list two named elements: low , corresponding bounds interval [low, ]. type character specifying type inverse sets fit. Choices \"upper\", \"lower\" \"interval\". Default \"upper\". x numerical vector x-axis coordinates 1D 2D cases. discrete coordinates, use character vector. y Optional vector y-axis coordinates 2D data. mu_hat numeric array (1D) matrix (2D) estimated means. mu_true provided, overwritten true mean. Default NULL. input must provided either mu_hat mu_true. mu_true Optional numeric array (1D) matrix (2D) true means, overrides mu_hat provided. Default NULL. together Optional logical value plotting option. TRUE, plots confidence levels figure; otherwise, generates one plot per level. Default TRUE. xlab Optional character label x-axis. Default \"x1\". ylab Optional character label y-axis. Default \"x2\". level_label Optional logical value level displaying option. TRUE, displays numeric level labels contour lines 2D confidence sets. Default TRUE. min.size Optional logical value minimum number points required contour labeled. Default 5. palette Optional character value name HCL color palette use plotting multiple levels together. Default \"gray\". color_level_label Optional character value color used contour level labels. Default \"black\".","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/plot_cs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Inversion of Simultaneous Confidence Intervals (SCIs) into Inner and Outer Confidence Sets (CSs) — plot_cs","text":"ggplot2 object representing inversion simultaneous confidence intervals.","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/plot_cs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Inversion of Simultaneous Confidence Intervals (SCIs) into Inner and Outer Confidence Sets (CSs) — plot_cs","text":"","code":"# example using pupil data library(mgcv) #> Warning: package ‘mgcv’ was built under R version 4.4.3 #> Loading required package: nlme #> Warning: package ‘nlme’ was built under R version 4.4.3 #> This is mgcv 1.9-3. For overview type 'help(\"mgcv-package\")'. data(pupil) pupil_fpca <- prepare_pupil_fpca(pupil)  fosr_mod <- mgcv::bam(percent_change ~ s(seconds, k=30, bs=\"cr\") +   s(seconds, by = use, k=30, bs = \"cr\") +   s(id, by = Phi1, bs=\"re\") +   s(id, by = Phi2, bs=\"re\")+   s(id, by = Phi3, bs=\"re\") +   s(id, by = Phi4, bs=\"re\"),   method = \"fREML\", data = pupil_fpca, discrete = TRUE)  pupil_cma <- SCB_functional_outcome(data = pupil_fpca, object = fosr_mod, method = \"cma\",                                    est_mean = TRUE, outcome = \"percent_change\",                                    time = \"seconds\", group_name = \"use\",                                    group_value = 1, subject = \"id\") pupil_cma <- tibble::as_tibble(pupil_cma)  plot_cs(pupil_cma,levels = c(-18, -20, -22, -24), x = pupil_cma$time,         mu_hat = pupil_cma$yhat, xlab = \"\", ylab = \"\",         level_label = T, min.size = 40, palette = \"Spectral\",         color_level_label = \"black\")"},{"path":"https://angelayustat.github.io/SCoRES/reference/prepare_pupil_fpca.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare Pupil FPCA Dataset — prepare_pupil_fpca","title":"Prepare Pupil FPCA Dataset — prepare_pupil_fpca","text":"Processes data fitting mean GAM model, extracting residuals, performing FPCA, merging results create enhanced dataset functional regression analysis.","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/prepare_pupil_fpca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare Pupil FPCA Dataset — prepare_pupil_fpca","text":"","code":"prepare_pupil_fpca(input_data, k_mean = 30, k_fpca = 15)"},{"path":"https://angelayustat.github.io/SCoRES/reference/prepare_pupil_fpca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare Pupil FPCA Dataset — prepare_pupil_fpca","text":"input_data Raw pupil data k_mean Number basis functions mean model smooth terms (default: 30) k_fpca Number knots FPCA estimation (default: 15)","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/prepare_pupil_fpca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare Pupil FPCA Dataset — prepare_pupil_fpca","text":"tibble containing: Original pupil variables FPCA eigenfunctions (Phi1, Phi2,...) Sorted subject time","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/prepare_pupil_fpca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare Pupil FPCA Dataset — prepare_pupil_fpca","text":"","code":"library(mgcv) data(pupil) processed_data <- prepare_pupil_fpca(pupil)"},{"path":"https://angelayustat.github.io/SCoRES/reference/pupil.html","id":null,"dir":"Reference","previous_headings":"","what":"Trajectories of Pupil Response to Light after Cannabis Use — pupil","title":"Trajectories of Pupil Response to Light after Cannabis Use — pupil","text":"Dataset contains functional observation pupil size percent change light stimulus. Participants cannabis use group smoked cannabis flower concentrate 40 minutes prior pupillometry measurement. Goal data understand differences pupil response light driven acute cannabis users. Measurements collected right eye.","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/pupil.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trajectories of Pupil Response to Light after Cannabis Use — pupil","text":"","code":"data(pupil)"},{"path":"https://angelayustat.github.io/SCoRES/reference/pupil.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Trajectories of Pupil Response to Light after Cannabis Use — pupil","text":"tibble 15000 rows 10 variables: id Factor. Subject identifier (127 unique levels). use_group Character. Original usage group classification (e.g., \"Daily - Flower\", \"Use\"). use Numeric. Binary indicator cannabis use 40 minute prior light stimulus. (1 = user, 0 = non-user) age Integer. Subject's age. gender Numeric. Binary indicator subject's gender: 1 = Female, 0 = Male. bmi Numeric. Body Mass Index. alcohol Numeric. Alcohol use score. seconds Numeric. Time seconds since light stimulus. percent_change_baseline Numeric. Percent change relative baseline. percent_change Numeric. Percent change outcome interest.","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/pupil.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Trajectories of Pupil Response to Light after Cannabis Use — pupil","text":"Processed data-raw/pupil_load.R using readr dplyr packages.","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/SCB_dense.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct Simultaneous Confidence Bands (SCB) for Dense Functional Data — SCB_dense","title":"Construct Simultaneous Confidence Bands (SCB) for Dense Functional Data — SCB_dense","text":"Construct Simultaneous Confidence Bands (SCB) Dense Functional Data","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/SCB_dense.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct Simultaneous Confidence Bands (SCB) for Dense Functional Data — SCB_dense","text":"","code":"SCB_dense(   A,   mean_A = NULL,   alpha = 0.05,   Mboots = NULL,   method = \"t\",   weights = \"rademacher\",   SCB = TRUE )"},{"path":"https://angelayustat.github.io/SCoRES/reference/SCB_dense.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct Simultaneous Confidence Bands (SCB) for Dense Functional Data — SCB_dense","text":"data array dimension (D₁, D₂, ..., N), N number repetition/subjects. NA . mean_A Optional array shape [,,1], representing estimated mean data. alpha Significance level SCB. Default 0.05. Mboots Number bootstrap replications. Default 5000. method Method SD estimation: \"t\" \"regular\". Default \"t\". weights Multiplier type: \"rademacher\", \"gaussian\", \"mammen\". Default \"rademacher\".\" SCB Logical value whether calculate SCB . Default TRUE.","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/SCB_dense.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct Simultaneous Confidence Bands (SCB) for Dense Functional Data — SCB_dense","text":"SCB = TRUE, returns list containing: yhat Estimated mean function group interest. se_hat Standard errors estimated means. scb_low Lower bound simultaneous confidence band. scb_up Upper bound simultaneous confidence band. type character description output type. SCB = FALSE, returns: thres alpha quantile estimated Multiplier Bootstrap","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/SCB_functional_outcome.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct Simultaneous Confidence Bands (SCB) For One Dimensional Functional Data — SCB_functional_outcome","title":"Construct Simultaneous Confidence Bands (SCB) For One Dimensional Functional Data — SCB_functional_outcome","text":"function builds simultaneous confidence bands two distinct approaches..","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/SCB_functional_outcome.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct Simultaneous Confidence Bands (SCB) For One Dimensional Functional Data — SCB_functional_outcome","text":"","code":"SCB_functional_outcome(   data_df,   object = NULL,   method,   fitted = TRUE,   est_mean = TRUE,   alpha = 0.05,   outcome,   time,   range = NULL,   group_name = NULL,   group_value = NULL,   subject,   nboot = NULL,   method_SD = \"t\",   weights = \"rademacher\" )"},{"path":"https://angelayustat.github.io/SCoRES/reference/SCB_functional_outcome.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct Simultaneous Confidence Bands (SCB) For One Dimensional Functional Data — SCB_functional_outcome","text":"data_df functional data frame. input data must column names, contain functional outcome, time, subject object fitted Function--Scalar Regression (FoSR) object (e.g., mgcv::bam()/mgcv::gam()). Default NULL method character string specifying approach: \"cma\" - Correlation Multiplicity Adjusted (CMA) confidence bands via parametric approach (requires fitted functional regression model) \"multiplier\" - Dense confidence bands via Multiplier-t Bootstrap method method = \"multiplier\" option, user check whether input data (data) zero entries every subject specific time point. function allow zero entries time point zero. Otherwise, function return error. Besides, Multiplier Bootstrap, exist NA data, function impute NA's via fpca.face. fitted Logical. Whether estimate simultaneous confidence bands fitted mean function fitted parameter function TRUE - Estimate simultaneous confidence bands fitted mean outcome function. FALSE - estimate simultaneous confidence bands fitted parameter function. Default TRUE. est_mean Logical. Whether use fitted mean functional regression model Multiplier Bootstrap (method = \"multiplier\") estimating quantile. argument can ignored choose method = \"cma\". TRUE, function use: Fitted mean: estimated mean function fitted model (e.g., mgcv::bam). Need provide fitted functional outcome regression model object. Otherwise, sample mean calculated. FALSE, function instead use: Sample mean: $$\\hat{\\beta}(s) = \\frac{1}{n} \\sum_{=1}^n \\tilde{Y}_i(s)$$ \\(\\tilde{Y}_i(s)\\) smoothed version observed functional response. sample mean option, exists NA data, perform imputation fill values. Default FALSE. alpha Significance level SCB. Default 0.05. outcome character string specifying name outcome variable used model. Must provided choose method = \"multiplier\". time character string specifying name time variable used model. range numeric vector specifying range grid time points interested. Defaut whole time points fitted model. group_name character vector specifies names grouping scalar variables analyze. Default NULL, representing reference group method = \"cma\". method = \"multiplier\", NuULL allowed. group_value numeric vector specifies corresponding values variables listed group_name. entry group_value match respective variable group_name. Character/factor allowed. Default NULL, representing reference group \"cma\". method = \"multiplier\", NuULL allowed. subject character string specifying name subject variable. nboot integer specifying number bootstrap samples used construct confidence bands. Default 10,000 cma, 5000 Multiplier Bootstrap. method_SD Method SD estimation: \"t\" \"regular\". Default \"t\". weights Multiplier type: \"rademacher\", \"gaussian\", \"mammen\". Default \"rademacher\".\" CMA bands (method = \"cma\"), please provide pre-fitted functional regression model Multiplier Bootstrap bands (method = \"multiplier\"), original input data required.","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/SCB_functional_outcome.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct Simultaneous Confidence Bands (SCB) For One Dimensional Functional Data — SCB_functional_outcome","text":"list containing: yhat Estimated mean function group interest. time time points used. se_hat Standard errors estimated means. scb_low Lower bound simultaneous confidence band. scb_up Upper bound simultaneous confidence band. type character description output type.","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/SCB_functional_outcome.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct Simultaneous Confidence Bands (SCB) For One Dimensional Functional Data — SCB_functional_outcome","text":"","code":"# example using pupil data library(mgcv) data(pupil) pupil_fpca <- prepare_pupil_fpca(pupil)  fosr_mod <- mgcv::bam(percent_change ~ s(seconds, k=30, bs=\"cr\") +   s(seconds, by = use, k=30, bs = \"cr\") +   s(id, by = Phi1, bs=\"re\") +   s(id, by = Phi2, bs=\"re\")+   s(id, by = Phi3, bs=\"re\") +   s(id, by = Phi4, bs=\"re\"),   method = \"fREML\", data = pupil_fpca, discrete = TRUE)  # CMA approach results <- SCB_functional_outcome(data_df = pupil, object = fosr_mod, method = \"cma\", fitted = TRUE,                                   est_mean = TRUE, outcome = \"percent_change\", time = \"seconds\",                                   group_name = \"use\", group_value = 1, subject = \"id\")   # multiplier bootstrap results <- SCB_functional_outcome(data_df = pupil, object = fosr_mod,                                   method = \"multiplier\", fitted = TRUE,                                   est_mean = TRUE, outcome = \"percent_change\",                                   time = \"seconds\", group_name = \"use\",                                   group_value = 1, subject = \"id\") results <- SCB_functional_outcome(data_df = pupil, object = fosr_mod,                                   method = \"multiplier\", fitted = TRUE,                                   est_mean = FALSE, outcome = \"percent_change\",                                   time = \"seconds\", group_name = \"use\",                                   group_value = 1, subject = \"id\")"},{"path":"https://angelayustat.github.io/SCoRES/reference/SCB_gls_climate.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct Simultaneous Confidence Bands for a Spatial Generalized Least Square Model — SCB_gls_climate","title":"Construct Simultaneous Confidence Bands for a Spatial Generalized Least Square Model — SCB_gls_climate","text":"Construct Simultaneous Confidence Bands Spatial Generalized Least Square Model","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/SCB_gls_climate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct Simultaneous Confidence Bands for a Spatial Generalized Least Square Model — SCB_gls_climate","text":"","code":"SCB_gls_climate(   Z,   level = NULL,   X = NULL,   w = NULL,   correlation = NULL,   corpar = NULL,   groups = NULL,   V = NULL,   alpha = 0.1,   N = 1000,   mask = NULL )"},{"path":"https://angelayustat.github.io/SCoRES/reference/SCB_gls_climate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct Simultaneous Confidence Bands for a Spatial Generalized Least Square Model — SCB_gls_climate","text":"Z list containing spatial coordinates observations. include following components: x: numeric vector x-coordinates (e.g., longitude). y: numeric vector y-coordinates (e.g., latitude). z: 3D array observations dimensions length(x) × length(y) × n. level optional numeric threshold value used test whether estimated mean surface significantly deviates . Default NULL. X design matrix used generalized least squares (GLS) model. row corresponds observation, column covariate. Default matrix(1, n, 1) (keep intercept term) w numeric vector specifying linear combination regression coefficients. Default matrix(1, 1, 1). correlation character string specifying name correlation structure (e.g., \"corAR1\", \"corCompSymm\") used GLS model. NULL, correlation structure assumed. corpar list parameters passed correlation structure function specified correlation. groups vector group identifiers used define within-group correlation structure (e.g., repeated measures, time blocks). specified, defaults rep(1, n), assuming observations belong single group. V optional array known covariance matrices shape [length(x), length(y), n, n], V[,j,,] corresponds covariance matrix observations spatial location (x[], y[j]). V given, GLS model fitted based V. Otherwise, GLS model fitted based correlation structure. alpha numerical value specifying confidence level Simultaneous Confidence Bands. Defalut 0.1. N integer specifying number bootstrap samples construct Simultaneous Confidence Bands. Default 1000. mask optional logical matrix dimensions c(length(Z$x), length(Z$y)), indicating spatial locations include SCB computation. Non-included locations (e.g., water areas) set 0 NA. Default array(1, dim = c(length(Z$x), length(Z$y)))","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/SCB_gls_climate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct Simultaneous Confidence Bands for a Spatial Generalized Least Square Model — SCB_gls_climate","text":"list containing following components: scb_up matrix upper bounds simultaneous confidence bands spatial location. scb_low matrix lower bounds simultaneous confidence bands spatial location. mu_hat matrix estimated mean values spatial location. norm_est matrix standardized test statistics (mu_hat - level) / SE. thres bootstrap threshold used construct confidence bands. x vector x-coordinates corresponding columns spatial grid. y vector y-coordinates corresponding rows spatial grid.","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/SCB_gls_climate.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Construct Simultaneous Confidence Bands for a Spatial Generalized Least Square Model — SCB_gls_climate","text":"Sommerfeld, M., Sain, S., & Schwartzman, . (2018). Confidence regions spatial excursion sets repeated random field observations, application climate. Journal American Statistical Association, 113(523), 1327–1340. doi:10.1080/01621459.2017.1356318","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/SCB_gls_climate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct Simultaneous Confidence Bands for a Spatial Generalized Least Square Model — SCB_gls_climate","text":"","code":"data(climate_data) library(nlme) # construct confidence sets for the increase of the mean temperature (June-August) # in North America between the 20th and 21st centuries temp = SCB_gls_climate(Z = climate_data$Z, level = 2, X = climate_data$X,                        w = c(1,0,0,0), correlation = climate_data$correlation,                        mask = climate_data$mask, alpha = 0.1)"},{"path":"https://angelayustat.github.io/SCoRES/reference/SCB_linear_outcome.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct Simultaneous Confidence Bands for a Linear Regression Model — SCB_linear_outcome","title":"Construct Simultaneous Confidence Bands for a Linear Regression Model — SCB_linear_outcome","text":"function fits linear model constructs simultaneous confidence bands (SCB) using non-parametric bootstrap method mean outcome regression fixed test set design matrix","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/SCB_linear_outcome.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct Simultaneous Confidence Bands for a Linear Regression Model — SCB_linear_outcome","text":"","code":"SCB_linear_outcome(   df_fit,   model,   grid_df,   n_boot = 1000,   alpha = 0.05,   grid_df_boot = NULL )"},{"path":"https://angelayustat.github.io/SCoRES/reference/SCB_linear_outcome.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct Simultaneous Confidence Bands for a Linear Regression Model — SCB_linear_outcome","text":"df_fit data frame containing training design matrix used fit linear model. model character string representing formula linear model (e.g., \"y ~ x1 + x2\"). grid_df data frame containing test set design matrix evaluate predictions construct confidence bands. n_boot Number bootstrap samples used non-parametric bootstrap procedure generate empirical distribution. Default 1000. alpha Significance level confidence band (e.g., 0.05 95% confidence). Default 0.05. grid_df_boot optional data frame specifying input grid predictions evaluated bootstrap resampling. allows SCBs constructed denser alternative set covariate values desired.. NULL, uses grid_df.","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/SCB_linear_outcome.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct Simultaneous Confidence Bands for a Linear Regression Model — SCB_linear_outcome","text":"data frame following columns: scb_low Lower bound simultaneous confidence band. Mean Predicted mean response fitted model. scb_up Upper bound simultaneous confidence band. ... columns grid_df, representing prediction grid.","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/SCB_linear_outcome.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct Simultaneous Confidence Bands for a Linear Regression Model — SCB_linear_outcome","text":"","code":"set.seed(262) x1 <- rnorm(100) x2 <- rnorm(100) epsilon <- rnorm(100,0,sqrt(2)) y <- -1 + x1 + 0.5 * x1^2 - 1.1 * x1^3 - 0.5 * x2 + 0.8 * x2^2 - 1.1 * x2^3 + epsilon df <- data.frame(x1 = x1, x2 = x2, y = y) grid <- data.frame(x1 = seq(-1, 1, length.out = 100), x2 = seq(-1, 1, length.out = 100)) model <- \"y ~ x1 + I(x1^2) + I(x1^3) + x2 + I(x2^2) + I(x2^3)\" results <- SCB_linear_outcome(df_fit = df, model = model, grid_df = grid)"},{"path":"https://angelayustat.github.io/SCoRES/reference/SCB_logistic_outcome.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct Simultaneous Confidence Bands for a Logistic Regression Model — SCB_logistic_outcome","title":"Construct Simultaneous Confidence Bands for a Logistic Regression Model — SCB_logistic_outcome","text":"function fits logistic regression model constructs simultaneous confidence bands (SCB) using non-parametric bootstrap method mean outcome regression fixed test set design matrix","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/SCB_logistic_outcome.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct Simultaneous Confidence Bands for a Logistic Regression Model — SCB_logistic_outcome","text":"","code":"SCB_logistic_outcome(df_fit, model, grid_df, n_boot = 1000, alpha = 0.05)"},{"path":"https://angelayustat.github.io/SCoRES/reference/SCB_logistic_outcome.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct Simultaneous Confidence Bands for a Logistic Regression Model — SCB_logistic_outcome","text":"df_fit data frame containing training design matrix used fit logistic model. model character string representing formula logistic model (e.g., \"y ~ x1 + x2\"). grid_df data frame containing test set design matrix evaluate predictions construct confidence bands. n_boot Number bootstrap samples used non-parametric bootstrap procedure generate empirical distribution. Default 1000. alpha Significance level confidence band (e.g., 0.05 95% confidence). Default 0.05.","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/SCB_logistic_outcome.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct Simultaneous Confidence Bands for a Logistic Regression Model — SCB_logistic_outcome","text":"data frame following columns: scb_low Lower bound simultaneous confidence band. Mean Predicted mean response fitted model. scb_up Upper bound simultaneous confidence band. grid_df columns grid_df, representing prediction grid.","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/SCB_logistic_outcome.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct Simultaneous Confidence Bands for a Logistic Regression Model — SCB_logistic_outcome","text":"","code":"set.seed(262) x1 <- rnorm(100) x2 <- rnorm(100) epsilon <- rnorm(100,0,sqrt(2)) y <- -1 + x1 + 0.5 * x1^2 - 1.1 * x1^3 - 0.5 * x2 + 0.8 * x2^2 - 1.1 * x2^3 + epsilon y <- expit(y) df <- data.frame(x1 = x1, x2 = x2, y = y) grid <- data.frame(x1 = seq(-1, 1, length.out = 100), x2 = seq(-1, 1, length.out = 100)) model <- \"y ~ x1 + I(x1^2) + I(x1^3) + x2 + I(x2^2) + I(x2^3)\" results <- SCB_logistic_outcome(df_fit = df, model = model, grid_df = grid)"},{"path":"https://angelayustat.github.io/SCoRES/reference/SCB_regression_coef.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct Simultaneous Confidence Bands for Regression Coefficients — SCB_regression_coef","title":"Construct Simultaneous Confidence Bands for Regression Coefficients — SCB_regression_coef","text":"function fits either linear logistic regression model computes simultaneous confidence bands (SCBs) model coefficients using non-parametric bootstrap procedure.","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/SCB_regression_coef.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct Simultaneous Confidence Bands for Regression Coefficients — SCB_regression_coef","text":"","code":"SCB_regression_coef(   df_fit,   model,   n_boot = 5000,   alpha = 0.05,   type = \"linear\" )"},{"path":"https://angelayustat.github.io/SCoRES/reference/SCB_regression_coef.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct Simultaneous Confidence Bands for Regression Coefficients — SCB_regression_coef","text":"df_fit data frame containing design matrix response variable used fit model. model character string specifying regression formula (e.g., \"y ~ x1 + x2\"). n_boot Integer. Number bootstrap samples use constructing SCBs. Default 5000. alpha Numeric. Significance level confidence bands (e.g., 0.05 95% SCBs). Default 0.05. type character string specifying model type. Either \"linear\" (default) \"logistic\".","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/SCB_regression_coef.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct Simultaneous Confidence Bands for Regression Coefficients — SCB_regression_coef","text":"data frame following columns: scb_low Lower bound simultaneous confidence band coefficient. Mean Estimated value coefficient fitted model. scb_up Upper bound simultaneous confidence band coefficient.","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/SCB_regression_coef.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct Simultaneous Confidence Bands for Regression Coefficients — SCB_regression_coef","text":"","code":"library(MASS) set.seed(262) M <- 50 rho <- 0.4 n <- 500 beta <- rnorm(M, mean = 0, sd = 1) Sigma <- outer(1:M, 1:M, function(i, j) rho^abs(i - j)) X <- MASS::mvrnorm(n = n, mu = rep(0, M), Sigma = Sigma) epsilon <- rnorm(n, mean = 0, sd = 1) y <- X %*% beta + epsilon df <- as.data.frame(X) names(df) <- paste0(\"x\", 1:M) df$y <- as.vector(y) model <- \"y ~ .\" results <- SCB_regression_coef(df, model)"},{"path":"https://angelayustat.github.io/SCoRES/reference/scb_to_cs.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct Inverse Confidence Sets from Simultaneous Confidence Bands — scb_to_cs","title":"Construct Inverse Confidence Sets from Simultaneous Confidence Bands — scb_to_cs","text":"function constructs inverse confidence sets (CS) simultaneous confidence bands (SCB), allowing visualization containment check level sets true estimated functions.","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/scb_to_cs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct Inverse Confidence Sets from Simultaneous Confidence Bands — scb_to_cs","text":"","code":"scb_to_cs(   scb_up,   scb_low,   levels,   true_mean = NULL,   est_mean = NULL,   x1 = NULL,   x2 = NULL,   type = \"upper\",   return_contain_only = F,   return_plot = F,   xlab = NULL,   ylab = NULL )"},{"path":"https://angelayustat.github.io/SCoRES/reference/scb_to_cs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct Inverse Confidence Sets from Simultaneous Confidence Bands — scb_to_cs","text":"scb_up numeric vector (1D) matrix (2D) containing upper simultaneous confidence interval. scb_low numeric vector (1D) matrix (2D) containing lower bounds simultaneous confidence bands. Dimensions scb_up scb_low must match. levels numeric vector list scalers different levels matrix containing interval sets construct confidence sets. type = \"upper\", \"lower\", \"two-sided\", levels vector. type = \"interval\", levels list two named elements: low , corresponding bounds interval [low, ]. true_mean Optional matrix true mean function. dimension scb_up scb_low. est_mean Optional matrix estimated mean function, used plotting true_mean available. dimension scb_up scb_low. x1 numeric vector coordinates first dimension used plotting inner outer confidence sets (CSs). Default NULL. Dimension x1 must match first dimension scb_up scb_low. x2 numeric vector coordinates second dimension used plotting inner outer confidence sets (CSs). Default NULL. Dimension x1 must match second dimension scb_up scb_low. type character string specifying type inverse set construct levels matrix. Choices \"upper\", \"lower\", \"two-sided\" \"interval\". Notice \"two-sided\" type available plotting (return_plot = TRUE). return_contain_only Logical. TRUE, return matrix/logical map indicating whether level set contained. return_plot Logical. TRUE, return ggplot object visualizing inner outer confidence sets (CSs). xlab character name x axis used plotting inner outer confidence sets (CSs). Default NULL. ylab character name y axis used plotting inner outer confidence sets (CSs). Default NULL.","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/scb_to_cs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct Inverse Confidence Sets from Simultaneous Confidence Bands — scb_to_cs","text":"list containing following components: levels vector (list) threshold levels used define confidence sets. input levels. U_in (Optional) list logical matrices indicating whether point within conservative inner confidence set level. Returned return_contain_only = FALSE type != \"two-sided\". U_out (Optional) list logical matrices indicating whether point within liberal outer confidence set level. Returned return_contain_only = FALSE type != \"two-sided\". L_out (Two-sided ) list logical matrices indicating lower bound containment (type = \"two-sided\"). U_out (Two-sided ) list logical matrices indicating upper bound containment (type = \"two-sided\"). contain_individual logical vector indicating whether true mean fully contained within level's confidence set. Returned true_mean provided. contain_all single logical value indicating whether true mean contained levels' confidence sets. plot_cs (Optional) list ggplot2 objects visualizing confidence sets, returned return_plot = TRUE. Includes combined plot individual plots per level.","code":""},{"path":"https://angelayustat.github.io/SCoRES/reference/scb_to_cs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct Inverse Confidence Sets from Simultaneous Confidence Bands — scb_to_cs","text":"","code":"set.seed(262) x1 <- rnorm(100) x2 <- rnorm(100) y <- -1 + x1 + 0.5 * x1^2 - 1.1 * x1^3 - 0.5 * x2 + 0.8 * x2^2 - 1.1 * x2^3 - rnorm(100,0,sqrt(2)) df <- data.frame(x1 = x1, x2 = x2, y = y) grid <- data.frame(x1 = seq(-1, 1, length.out = 100), x2 = seq(-1, 1, length.out = 100)) model <- \"y ~ x1 + I(x1^2) + I(x1^3) + x2 + I(x2^2) + I(x2^3)\" result <- SCB_linear_outcome(df_fit = df, model = model, grid_df = grid) scb_to_cs(result$scb_up, result$scb_low, c(-1, -0.5, 0.5, 1), x1 = grid$x1, x2 = grid$x2, est_mean = results$Mean) #> $levels #> [1] -1.0 -0.5  0.5  1.0 #>  #> $U_in #> $U_in[[1]] #>   [1]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE #>  [13]  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #>  [25] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #>  [37] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #>  [49] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #>  [61] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #>  [73] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #>  [85] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #>  [97] FALSE FALSE FALSE FALSE #>  #> $U_in[[2]] #>   [1]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE #>  [13] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #>  [25] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #>  [37] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #>  [49] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #>  [61] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #>  [73] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #>  [85] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #>  [97] FALSE FALSE FALSE FALSE #>  #> $U_in[[3]] #>   [1]  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #>  [13] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #>  [25] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #>  [37] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #>  [49] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #>  [61] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #>  [73] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #>  [85] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #>  [97] FALSE FALSE FALSE FALSE #>  #> $U_in[[4]] #>   [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #>  [13] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #>  [25] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #>  [37] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #>  [49] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #>  [61] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #>  [73] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #>  [85] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #>  [97] FALSE FALSE FALSE FALSE #>  #>  #> $U_out #> $U_out[[1]] #>   [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE #>  [16] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE #>  [31] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE #>  [46] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE #>  [61] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE #>  [76] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE #>  [91] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE #>  #> $U_outout[[3]] #>   [1]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE #>  [13]  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #>  [25] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #>  [37] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #>  [49] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #>  [61] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #>  [73] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #>  [85] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #>  [97] FALSE FALSE FALSE FALSE #>  #> $U_out[[4]] #>   [1]  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE #>  [13] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #>  [25] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #>  [37] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #>  [49] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #>  [61] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #>  [73] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #>  [85] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE #>  [97] FALSE FALSE FALSE FALSE #>  #>  #> $contain_individual #> NULL #>  #> $contain_all #> [1] TRUE #>  #> $plot_cs #> NULL #>"},{"path":"https://angelayustat.github.io/SCoRES/reference/SCoRES-package.html","id":null,"dir":"Reference","previous_headings":"","what":"SCoRES: Simultaneous COnfidence Region Excursion Sets — SCoRES-package","title":"SCoRES: Simultaneous COnfidence Region Excursion Sets — SCoRES-package","text":"package provides useful statistical tools estimation inverse set corresponding simultaneous outer inner confidence sets. Acceptable forms input includes 1D 2D data linear regression, logistic regression, functional regression spatial generalized least square regression. Useful functions also provided constructing simultaneous confidence bands (SCB) models.","code":""},{"path":[]},{"path":"https://angelayustat.github.io/SCoRES/reference/SCoRES-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"SCoRES: Simultaneous COnfidence Region Excursion Sets — SCoRES-package","text":"Maintainer: Angela Yu angela.yu@emory.edu Authors: Armin Schwartzman armins@health.ucsd.edu Julia Wrobel julia.wrobel@emory.edu contributors: Junting Ren junting.ren.stat@gmail.com [contributor]","code":""}]
